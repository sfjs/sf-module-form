{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///sf.form.js","webpack:///webpack/bootstrap 8f8e2a76e6547a13beb3","webpack:///external {\"commonjs\":\"sf-core\",\"commonjs2\":\"sf-core\",\"amd\":\"sf-core\",\"root\":\"sf\"}","webpack:///./src/index.js","webpack:///./src/Form.js","webpack:///./src/formMessages.js","webpack:///./src/formToObject.js","webpack:///./src/iterateInputs.js"],"names":["root","factory","exports","module","require","define","amd","sf","this","__WEBPACK_EXTERNAL_MODULE_0__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","Form","registerInstanceType","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_sf_core__","__WEBPACK_IMPORTED_MODULE_0_sf_core___default","__WEBPACK_IMPORTED_MODULE_1__formToObject__","__WEBPACK_IMPORTED_MODULE_1__formToObject___default","formMessages","iterateInputs","node","options","_construct","a","createModulePrototype","init","mixMessagesOptions","DOMEvents","helpers","addEvents","events","core","Events","optionsToGrab","context","processor","val","self","url","domAttr","method","lockType","messagesType","messages","JSON","parse","e","console","error","assign","useAjax","toLowerCase","ajaxCallback","beforeSubmitCallback","afterSubmitCallback","headers","Accept","global","instances","form","defaults","onSubmit","getInstance","preventDefault","stopPropagation","removeMessages","data","getFormData","window","FormData","querySelectorAll","length","trigger","send","lock","remove","removeInstance","warn","addInstance","type","showFormMessage","showFieldMessage","showFieldsMessages","showMessages","removeMessage","processAnswer","answer","sendOptions","that","fn","eval","ajax","then","log","setOptions","opt","add","DOMNode","eventType","eventFunction","die","removeAll","prepareMessageObject","message","toString","text","template","close","place","levels","success","info","warning","field","fieldTemplate","fieldClose","fieldPlace","fieldPrefix","debug","notice","danger","critical","alert","emergency","isMsg","errors","warnings","status","statusText","_messages","forEach","closeHandler","bind","addEventListener","removeEventListener","el","parentNode","removeChild","classList","splice","indexOf","msgEl","parent","tpl","parser","DOMParser","item","replace","parseFromString","firstChild","lastChild","appendChild","insertBefore","document","querySelector","push","isContainer","domTools","closest","msgObj","keys","container","FormToObject","formRef","keyRegex","$form","$formElements","formObj","setForm","setFormElements","setFormObj","getElementById","isDomNode","nodeType","arr","callback","addChild","result","domNode","nodeName","checked","DOMchilds","child","test","disabled","match","findNodes","names","prefix","partOfSelector","selector","sel","nodes","notFound","max","obj"],"mappings":"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","file":"sf.form.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"sf-core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"sf-form\", [\"sf-core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sf-form\"] = factory(require(\"sf-core\"));\n\telse\n\t\troot[\"sf-form\"] = factory(root[\"sf\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"sf-core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"sf-form\", [\"sf-core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sf-form\"] = factory(require(\"sf-core\"));\n\telse\n\t\troot[\"sf-form\"] = factory(root[\"sf\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar sf = __webpack_require__(0);\nvar Form = __webpack_require__(2).default;\n\nsf.registerInstanceType(Form, \"js-sf-form\");\n\nmodule.exports = Form; // ES6 default export will not expose us as global\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_sf_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_sf_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_sf_core__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__formToObject__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__formToObject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__formToObject__);\n\n\n\n\nvar formMessages = __webpack_require__(3);\nvar iterateInputs = __webpack_require__(5);\n\n\n/**\r\n * Spiral Forms\r\n * @param {Object} sf\r\n * @param {Object} node  DomNode of form\r\n * @param {Object} [options] all options to override default\r\n * @constructor Form\r\n * @extends BaseDOMConstructor\r\n */\nvar Form = function (sf, node, options) {\n    this._construct(sf, node, options);\n};\n\n/**\r\n * @lends sf.Form.prototype\r\n */\nForm.prototype = __WEBPACK_IMPORTED_MODULE_0_sf_core___default.a.createModulePrototype();\n\n/**\r\n * Name to register\r\n * @type {string}\r\n */\nForm.prototype.name = \"form\";\n\n/**\r\n * Function that call on new instance is created.\r\n * @param {Object} sf\r\n * @param {Object} node  DomNode of form\r\n * @param {Object} [options] all options to override default\r\n * @private\r\n */\nForm.prototype._construct = function (sf, node, options) {\n    this.init(sf, node, options);\n    this.mixMessagesOptions();\n    // this.options.fillFrom && this.fillFieldsFrom(); // id required to fill form\n\n    /**\r\n     * @extends DOMEvents\r\n     * @type {DOMEvents}\r\n     * @inheritDoc\r\n     * */\n    this.DOMEvents = new this.sf.modules.helpers.DOMEvents();\n    this.addEvents();\n\n    this.events = new this.sf.modules.core.Events([\"beforeSend\", \"success\", \"error\", \"always\"]);\n    sf.iterateInputs = iterateInputs;\n};\n\n/**\r\n * @override\r\n * @inheritDoc\r\n * @enum {Object}\r\n * @deprecated\r\n */\nForm.prototype.optionsToGrab = {\n    /**\r\n     * Link to form\r\n     */\n    \"context\": {\n        processor: function (node, val) {\n            // Processor\n            return node;\n        }\n    },\n    /**\r\n     * Link to 'this'\r\n     */\n    \"self\": {\n        processor: function (node, val) {\n            return this;\n        }\n    },\n    /**\r\n     * URL to send form (if ajax form) <b>Default: \"/\"</b>\r\n     */\n    \"url\": {\n        domAttr: \"action\",\n        value: \"/\"\n    },\n    /**\r\n     * Method to send to send form (if ajax form) <b>Default: \"POST\"</b>\r\n     */\n    \"method\": {\n        domAttr: \"method\",\n        value: \"POST\"\n    },\n    /**\r\n     * Lock type when form sending <b>Default: \"default\"</b> @see sf.lock\r\n     */\n    \"lockType\": {\n        value: \"default\",\n        domAttr: \"data-lockType\"\n    },\n    /**\r\n     *\r\n     */\n    \"messagesType\": {\n        value: \"spiral\",\n        domAttr: \"data-messagesType\"\n    },\n    /**\r\n     * Pass custom template for form messages\r\n     */\n    \"messages\": {\n        value: \"\",\n        domAttr: \"data-messages\",\n        processor: function (node, val, self) {\n            if (!val) return this.value;\n            if (typeof val == \"string\") {\n                try {\n                    val = JSON.parse(val);\n                } catch (e) {\n                    console.error(\"Form JSON.parse error: \", e);\n                }\n            }\n            return Object.assign(self.value, val);\n        }\n    },\n    /**\r\n     * Use ajax to submit form <b>Default: true</b>\r\n     */\n    \"useAjax\": { // Attribute of form\n        value: true, // Default value\n        domAttr: \"data-useAjax\",\n        processor: function (node, val) {\n            // processor to process data before return\n            if (typeof val === \"boolean\") {\n                return val;\n            }\n            val = val !== void 0 && val !== null ? val.toLowerCase() : '';\n            if (val === 'false') {\n                val = false;\n            } else if (val === 'true') {\n                val = true;\n            }\n            return val;\n        }\n    },\n    /**\r\n     * Callback after form submitting <b>Default: false</b>\r\n     * <br/>\r\n     * <b> Example </b>\r\n     * function(options){\r\n     *  //options contains all options after send\r\n     * }\r\n     */\n    \"ajaxCallback\": { // attribute of form\n        value: false, // Default value\n        domAttr: \"data-callback\"\n    },\n    \"beforeSubmitCallback\": { // attribute of form\n        value: false, // Default value\n        domAttr: \"data-before-submit\"\n    },\n    \"afterSubmitCallback\": { // attribute of form\n        value: false, // Default value\n        domAttr: \"data-after-submit\"\n    },\n    \"headers\": { // attribute of form\n        value: { \"Accept\": \"application/json\" }, // Default value\n        domAttr: \"data-headers\",\n        processor: function (node, val, self) {\n            if (val === void 0 || val == null) return this.value;\n            if (typeof val == \"string\") {\n                try {\n                    val = JSON.parse(val);\n                } catch (e) {\n                    console.error(\"Form JSON.parse error: \", e);\n                }\n            }\n            return Object.assign(self.value, val);\n        }\n    }\n};\n\nForm.prototype.mixMessagesOptions = function () {\n    var global = this.sf.options.instances.form;\n    this.options.messages = Object.assign({}, formMessages.defaults, global && global.messages && global.messages[this.options.messagesType], this.options.messages);\n};\n\n/**\r\n * Call on form submit\r\n * @param {Event} e submit event\r\n */\nForm.prototype.onSubmit = function (e) {\n    if (this.sf.getInstance('lock', this.node)) {\n        // On lock we should'n do any actions\n        e.preventDefault();\n        e.stopPropagation();\n        return;\n    }\n\n    this.removeMessages();\n\n    this.options.data = this.getFormData();\n\n    // We can send files only with FormData\n    // If form contain files and no FormData than disable ajax\n    if (!window.FormData && this.options.context.querySelectorAll(\"input[type='file']\").length !== 0) {\n        this.options.useAjax = false;\n    }\n    this.events.trigger(\"beforeSend\", this.options);\n    // sf.events.performAction(\"beforeSubmit\", this.options);\n    // this.events.performAction(\"beforeSubmit\", this.options);\n\n    if (this.options.useAjax) {\n        this.send(this.options);\n\n        e.preventDefault();\n        e.stopPropagation();\n    }\n};\n\n/**\r\n * Locker. Add or remove.\r\n * @param {Boolean} [remove]\r\n */\nForm.prototype.lock = function (remove) {\n    if (!this.options.lockType || this.options.lockType === 'none') {\n        return;\n    }\n    if (remove) {\n        if (!this.sf.removeInstance(\"lock\", this.node)) {\n            console.warn(\"You try to remove 'lock' instance, but it is not available or not started\");\n        }\n    } else {\n        if (!this.sf.addInstance(\"lock\", this.node, { type: this.options.lockType })) {\n            console.warn(\"You try to add 'lock' instance, but it is not available or already started\");\n        }\n    }\n};\n\n// Form messages\nForm.prototype.showFormMessage = formMessages.showFormMessage;\nForm.prototype.showFieldMessage = formMessages.showFieldMessage;\nForm.prototype.showFieldsMessages = formMessages.showFieldsMessages;\nForm.prototype.showMessages = formMessages.showMessages;\nForm.prototype.removeMessages = formMessages.removeMessages;\nForm.prototype.removeMessage = formMessages.removeMessage;\n\nForm.prototype.processAnswer = function (answer) {\n    this.options.messagesType && this.showMessages(answer);\n};\n\n/**\r\n * Send form to server\r\n * @param {Object} sendOptions\r\n */\nForm.prototype.send = function (sendOptions) {\n    var that = this;\n    this.lock();\n    if (sendOptions.beforeSubmitCallback) {\n        var fn = eval(sendOptions.beforeSubmitCallback);\n        if (typeof fn === \"function\") {\n            fn.call(sendOptions);\n        }\n    }\n    this.sf.ajax.send(sendOptions).then(function (answer) {\n        that.events.trigger(\"success\", sendOptions);\n        return answer;\n    }, function (error) {\n        that.events.trigger(\"error\", sendOptions);\n        return error;\n    }).then(function (answer) {\n        that.lock(true);\n        that.processAnswer(answer);\n        that.events.trigger(\"always\", sendOptions);\n    });\n};\n\n/**\r\n * Serialize form\r\n * @return {Object}\r\n */\nForm.prototype.getFormData = function () {\n    if (!!window.FormData) {\n        return new FormData(this.options.context);\n    } else {\n        console.log(\"Form `\" + this.options.context + \"` were processed without FormData.\");\n        return new __WEBPACK_IMPORTED_MODULE_1__formToObject___default.a(this.options.context);\n    }\n};\n\n/**\r\n * Set options (overwrite current)\r\n * @param {Object} opt options\r\n */\nForm.prototype.setOptions = function (opt) {\n    this.options = Object.assign(this.options, opt);\n};\n\n/**\r\n * Add all events for forms\r\n */\nForm.prototype.addEvents = function () {\n    var that = this;\n    this.DOMEvents.add([{\n        DOMNode: this.options.context,\n        eventType: \"submit\",\n        eventFunction: function (e) {\n            that.onSubmit.call(that, e);\n        }\n    }]);\n};\n\n/**\r\n * Clear all variables and die\r\n */\nForm.prototype.die = function () {\n    this.DOMEvents.removeAll();\n    // TODO don't we need to remove it's addons and plugins?\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Form);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = {\n    template: '<div class=\"alert form-msg ${type}\"><button class=\"btn-close\">×</button><p class=\"msg\">${text}</p></div>',\n    close: '.btn-close',\n    place: 'bottom',\n    levels: {\n        success: \"success\", info: \"info\", warning: \"warning\", error: \"error\"\n    },\n    field: '.item-form',\n    fieldTemplate: '<div class=\"alert form-msg ${type}\"><p class=\"msg\">${text}</p></div>',\n    fieldClose: '.btn-close',\n    fieldPlace: 'bottom',\n    fieldPrefix: '' // For bootstrap: class=\"has-danger\"\n};\n\n// Often used alias\ndefaults.levels.message = defaults.levels.success;\n\n// Other aliases\n// PSR-3 severity levels mapping (debug, info, notice, warning, error, critical, alert, emergency)\n// https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md\ndefaults.levels.debug = defaults.levels.success;\ndefaults.levels.info = defaults.levels.notice = defaults.levels.info;\ndefaults.levels.danger = defaults.levels.critical = defaults.levels.alert = defaults.levels.emergency = defaults.levels.error;\n\n/**\r\n * @param {Object|String} message\r\n * @param {String} type\r\n * @return {Object}\r\n */\nfunction prepareMessageObject(message, type) {\n    if (Object.prototype.toString.call(message) !== \"[object Object]\") {\n        message = { text: message, type: type };\n    }\n    message.text = message.text || message.message || message;\n    message.type = message.type || type;\n    return message;\n}\n\nmodule.exports = {\n    defaults: defaults,\n    showMessages: function (answer) {\n        if (!answer) return;\n\n        var isMsg = false;\n        var that = this;\n\n        for (var type in this.options.messages.levels) {\n            if (answer[type]) {\n                this.showFormMessage(answer[type], this.options.messages.levels[type]);\n                isMsg = true;\n            }\n        }\n\n        if (answer.messages) {\n            this.showFieldsMessages(answer.messages, \"success\");\n            isMsg = true;\n        }\n        if (answer.errors) {\n            this.showFieldsMessages(answer.errors, \"error\");\n            isMsg = true;\n        }\n        if (answer.warnings) {\n            this.showFieldsMessages(answer.warnings, \"warning\");\n            isMsg = true;\n        }\n\n        if (!isMsg && answer.status > 300) {\n            var error = answer.status ? answer.status + \" \" : \"\";\n            error += answer.statusText ? answer.statusText : \"\";\n            error += answer.data && !answer.statusText ? answer.data : \"\";\n            error += error.length === 0 ? answer : \"\";\n            this.showFormMessage(error, \"error\");\n        }\n\n        this._messages.forEach(function (m) {\n            if (m.close) {\n                m.closeHandler = that.removeMessage.bind(that, m);\n                m.close.addEventListener(\"click\", m.closeHandler);\n            }\n        });\n    },\n    removeMessage: function (m, e) {\n        m.close && m.close.removeEventListener(\"click\", m.closeHandler);\n        m.el.parentNode.removeChild(m.el);\n        m.field && m.field.classList.remove(this.options.messages.fieldPrefix + m.type);\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            this._messages.splice(this._messages.indexOf(m), 1);\n        }\n    },\n    removeMessages: function () {\n        var that = this;\n        if (this._messages) {\n            this._messages.forEach(function (m) {\n                that.removeMessage(m, false);\n            });\n        }\n        that._messages = [];\n    },\n    showFormMessage: function (message, type) {\n        var msgEl;\n        var parent;\n        var tpl = this.options.messages.template;\n        var parser = new DOMParser();\n\n        message = prepareMessageObject(message, type);\n\n        for (var item in message) {\n            if (!message.hasOwnProperty(item)) return;\n            tpl = tpl.replace('${' + item + '}', message[item]);\n        }\n\n        msgEl = parser.parseFromString(tpl, \"text/html\").firstChild.lastChild.firstChild;\n\n        if (this.options.messages.place === \"bottom\") {\n            this.node.appendChild(msgEl);\n        } else if (this.options.messages.place === \"top\") {\n            this.node.insertBefore(msgEl, this.node.firstChild);\n        } else {\n            parent = document.querySelector(this.options.messages.place);\n            parent.appendChild(msgEl);\n        }\n        this._messages.push({ el: msgEl, close: msgEl.querySelector(this.options.messages.close) });\n    },\n    /**\r\n     * @param {HTMLElement} el\r\n     * @param {String} message\r\n     * @param {String} type\r\n     * @param {Boolean} [isContainer]\r\n     */\n    showFieldMessage: function (el, message, type, isContainer) {\n        var field = isContainer ? el : sf.helpers.domTools.closest(el, this.options.messages.field);\n        var msgEl;\n        var tpl = this.options.messages.fieldTemplate;\n\n        if (!field) return;\n\n        var parser = new DOMParser();\n        message = prepareMessageObject(message, type);\n\n        field.classList.add(this.options.messages.fieldPrefix + type);\n\n        for (var item in message) {\n            if (!message.hasOwnProperty(item)) return;\n            tpl = tpl.replace('${' + item + '}', message[item]);\n        }\n\n        msgEl = parser.parseFromString(tpl, \"text/html\").firstChild.lastChild.firstChild;\n\n        if (this.options.messages.fieldPlace === \"bottom\") {\n            field.appendChild(msgEl);\n        } else if (this.options.messages.fieldPlace === \"top\") {\n            field.insertBefore(msgEl, field.firstChild);\n        } else {\n            field = field.querySelector(this.options.messages.fieldPlace);\n            field.appendChild(msgEl);\n        }\n\n        this._messages.push({\n            el: msgEl,\n            close: msgEl.querySelector(this.options.messages.fieldClose),\n            field: field,\n            type: type\n        });\n    },\n    showFieldsMessages: function (messages, type) {\n        var that = this;\n        var notFound = sf.iterateInputs(this.node, messages, function (el, message) {\n            that.showFieldMessage(el, message, type);\n        });\n\n        notFound.forEach(function (msgObj) {\n            Object.keys(msgObj).forEach(function (name) {\n                var container = that.node.querySelector('[data-message-placeholder=\"' + name + '\"]');\n                if (container) {\n                    // TODO check container.dataset.messageVariant? variants are \"field\" and \"form\"\n                    that.showFieldMessage(container, msgObj[name], type, true);\n                }\n            });\n        });\n    }\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n/* github.com/serbanghita/FormToObject.js 1.0.1  (c) 2013 Serban Ghita <serbanghita@gmail.com> @licence MIT */\n// Constructor.\n\nvar FormToObject = function (formRef) {\n    if (!formRef) {\n        return false;\n    }\n\n    this.formRef = formRef;\n    this.keyRegex = /[^\\[\\]]+/g;\n    this.$form = null;\n    this.$formElements = [];\n    this.formObj = {};\n\n    if (!this.setForm()) {\n        return false;\n    }\n    if (!this.setFormElements()) {\n        return false;\n    }\n\n    return this.setFormObj();\n};\n\n// Set the main form object we are working on.\nFormToObject.prototype.setForm = function () {\n    switch (typeof this.formRef) {\n\n        case 'string':\n            this.$form = document.getElementById(this.formRef);\n            break;\n\n        case 'object':\n            if (this.isDomNode(this.formRef)) {\n                this.$form = this.formRef;\n            }\n            break;\n\n    }\n\n    return this.$form;\n};\n\n// Set the elements we need to parse.\nFormToObject.prototype.setFormElements = function () {\n    this.$formElements = this.$form.querySelectorAll('input, textarea, select');\n    return this.$formElements.length;\n};\n\n// Check to see if the object is a HTML node.\nFormToObject.prototype.isDomNode = function (node) {\n    return typeof node === \"object\" && \"nodeType\" in node && node.nodeType === 1;\n};\n\n// Iteration through arrays and objects. Compatible with IE.\nFormToObject.prototype.forEach = function (arr, callback) {\n    if ([].forEach) {\n        return [].forEach.call(arr, callback);\n    }\n\n    var i;\n    for (i in arr) {\n        // Object.prototype.hasOwnProperty instead of arr.hasOwnProperty for IE8 compatibility.\n        if (Object.prototype.hasOwnProperty.call(arr, i)) {\n            callback.call(arr, arr[i]);\n        }\n    }\n};\n\n// Recursive method that adds keys and values of the corresponding fields.\nFormToObject.prototype.addChild = function (result, domNode, keys, value) {\n    // #1 - Single dimensional array.\n    if (keys.length === 1) {\n        // We're only interested in the radio that is checked.\n        if (domNode.nodeName === 'INPUT' && domNode.type === 'radio') {\n            if (domNode.checked) {\n                return result[keys] = value;\n            } else {\n                return;\n            }\n        }\n\n        // Checkboxes are a special case. We have to grab each checked values\n        // and put them into an array.\n        if (domNode.nodeName === 'INPUT' && domNode.type === 'checkbox') {\n            if (domNode.checked) {\n                if (!result[keys]) {\n                    result[keys] = [];\n                }\n                return result[keys].push(value);\n            } else {\n                return;\n            }\n        }\n\n        // Multiple select is a special case.\n        // We have to grab each selected option and put them into an array.\n        if (domNode.nodeName === 'SELECT' && domNode.type === 'select-multiple') {\n            result[keys] = [];\n            var DOMchilds = domNode.querySelectorAll('option[selected]');\n            if (DOMchilds) {\n                this.forEach(DOMchilds, function (child) {\n                    result[keys].push(child.value);\n                });\n            }\n            return;\n        }\n\n        // Fallback. The default one to one assign.\n        result[keys] = value;\n    }\n\n    // #2 - Multi dimensional array.\n    if (keys.length > 1) {\n        if (!result[keys[0]]) {\n            result[keys[0]] = {};\n        }\n\n        return this.addChild(result[keys[0]], domNode, keys.splice(1, keys.length), value);\n    }\n\n    return result;\n};\n\nFormToObject.prototype.setFormObj = function () {\n    var test;\n    var i = 0;\n\n    for (i = 0; i < this.$formElements.length; i++) {\n        // Ignore the element if the 'name' attribute is empty.\n        // Ignore the 'disabled' elements.\n        if (this.$formElements[i].name && !this.$formElements[i].disabled) {\n            test = this.$formElements[i].name.match(this.keyRegex);\n            this.addChild(this.formObj, this.$formElements[i], test, this.$formElements[i].value);\n        }\n    }\n\n    return this.formObj;\n};\n\nmodule.exports = FormToObject;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Plugin in formMessages to iterate form inputs\n\n// TODO comment all of this\n// TODO ask @Systerr the reason of variable 'prefix'\n\nvar notFound = [];\n\n/**\r\n *\r\n * @param {HTMLElement} context\r\n * @param {Object} names\r\n * @param {Function} callback\r\n * @param {String} [prefix]\r\n */\nfunction findNodes(context, names, callback, prefix) {\n    for (var name in names) {\n        if (!names.hasOwnProperty(name)) {\n            continue;\n        }\n\n        var partOfSelector = prefix ? prefix + \"[\" + name + \"]\" : name;\n        var type = Object.prototype.toString.call(names[name]);\n        var selector = \"[name='\" + partOfSelector + \"']\";\n\n        switch (type) {\n            case '[object Object]':\n                findNodes(context, names[name], callback, partOfSelector);\n                break;\n            case '[object Array]':\n                names[name].forEach(function (el) {\n                    \"use strict\";\n                    // TODO refactor this should call recursive\n\n                    var sel = \"[name='\" + partOfSelector + \"[]']\" + \"[value='\" + el + \"']\";\n                    var nodes = context.querySelectorAll(sel);\n                    if (nodes.length === 0) {\n                        notFound.push(sel);\n                    }\n                    for (var i = 0, max = nodes.length; i < max; i++) {\n                        callback(nodes[i], true);\n                    }\n                });\n                break;\n            case '[object String]':\n            case '[object Number]':\n                var nodes = context.querySelectorAll(selector);\n                if (nodes.length === 0) {\n                    var obj = {};\n                    obj[partOfSelector] = names[name];\n                    notFound.push(obj);\n                }\n                for (var i = 0, max = nodes.length; i < max; i++) {\n                    callback(nodes[i], names[name]);\n                }\n                break;\n\n            default:\n                console.error(\"unknown type -\", type, \" and message\", names[name]);\n        }\n    }\n}\n\n/**\r\n * @param {HTMLElement} context\r\n * @param {Object} names\r\n * @param {Function} callback\r\n * @param {String} [prefix]\r\n * @return {String[]}\r\n */\nvar iterateInputs = function (context, names, callback, prefix) {\n    notFound = [];\n    findNodes(context, names, callback, prefix);\n    if (notFound.length !== 0) {\n        console.log(\"Some element not found in form\", notFound);\n    }\n    return notFound;\n};\n\nmodule.exports = iterateInputs;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// sf.form.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8f8e2a76e6547a13beb3","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"sf-core\",\"commonjs2\":\"sf-core\",\"amd\":\"sf-core\",\"root\":\"sf\"}\n// module id = 0\n// module chunks = 0","\"use strict\";\r\nvar sf = require('sf-core');\r\nvar Form = require('./Form').default;\r\n\r\nsf.registerInstanceType(Form, \"js-sf-form\");\r\n\r\nmodule.exports = Form; // ES6 default export will not expose us as global\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","\"use strict\";\r\n\r\nimport sf from 'sf-core';\r\n\r\nvar formMessages = require(\"./formMessages\");\r\nvar iterateInputs = require(\"./iterateInputs\");\r\nimport FormToObject from './formToObject';\r\n\r\n/**\r\n * Spiral Forms\r\n * @param {Object} sf\r\n * @param {Object} node  DomNode of form\r\n * @param {Object} [options] all options to override default\r\n * @constructor Form\r\n * @extends BaseDOMConstructor\r\n */\r\nvar Form = function (sf, node, options) {\r\n    this._construct(sf, node, options);\r\n};\r\n\r\n\r\n/**\r\n * @lends sf.Form.prototype\r\n */\r\nForm.prototype = sf.createModulePrototype();\r\n\r\n/**\r\n * Name to register\r\n * @type {string}\r\n */\r\nForm.prototype.name = \"form\";\r\n\r\n/**\r\n * Function that call on new instance is created.\r\n * @param {Object} sf\r\n * @param {Object} node  DomNode of form\r\n * @param {Object} [options] all options to override default\r\n * @private\r\n */\r\nForm.prototype._construct = function (sf, node, options) {\r\n    this.init(sf, node, options);\r\n    this.mixMessagesOptions();\r\n    // this.options.fillFrom && this.fillFieldsFrom(); // id required to fill form\r\n\r\n    /**\r\n     * @extends DOMEvents\r\n     * @type {DOMEvents}\r\n     * @inheritDoc\r\n     * */\r\n    this.DOMEvents = new this.sf.modules.helpers.DOMEvents();\r\n    this.addEvents();\r\n\r\n    this.events = new this.sf.modules.core.Events([\"beforeSend\", \"success\", \"error\", \"always\"]);\r\n    sf.iterateInputs = iterateInputs;\r\n};\r\n\r\n/**\r\n * @override\r\n * @inheritDoc\r\n * @enum {Object}\r\n * @deprecated\r\n */\r\nForm.prototype.optionsToGrab = {\r\n    /**\r\n     * Link to form\r\n     */\r\n    \"context\": {\r\n        processor: function (node, val) { // Processor\r\n            return node;\r\n        }\r\n    },\r\n    /**\r\n     * Link to 'this'\r\n     */\r\n    \"self\": {\r\n        processor: function (node, val) {\r\n            return this;\r\n        }\r\n    },\r\n    /**\r\n     * URL to send form (if ajax form) <b>Default: \"/\"</b>\r\n     */\r\n    \"url\": {\r\n        domAttr: \"action\",\r\n        value: \"/\"\r\n    },\r\n    /**\r\n     * Method to send to send form (if ajax form) <b>Default: \"POST\"</b>\r\n     */\r\n    \"method\": {\r\n        domAttr: \"method\",\r\n        value: \"POST\"\r\n    },\r\n    /**\r\n     * Lock type when form sending <b>Default: \"default\"</b> @see sf.lock\r\n     */\r\n    \"lockType\": {\r\n        value: \"default\",\r\n        domAttr: \"data-lockType\"\r\n    },\r\n    /**\r\n     *\r\n     */\r\n    \"messagesType\": {\r\n        value: \"spiral\",\r\n        domAttr: \"data-messagesType\"\r\n    },\r\n    /**\r\n     * Pass custom template for form messages\r\n     */\r\n    \"messages\": {\r\n        value: \"\",\r\n        domAttr: \"data-messages\",\r\n        processor: function (node, val, self) {\r\n            if (!val) return this.value;\r\n            if (typeof val == \"string\") {\r\n                try {\r\n                    val = JSON.parse(val);\r\n                } catch (e) {\r\n                    console.error(\"Form JSON.parse error: \", e);\r\n                }\r\n            }\r\n            return Object.assign(self.value, val);\r\n        }\r\n    },\r\n    /**\r\n     * Use ajax to submit form <b>Default: true</b>\r\n     */\r\n    \"useAjax\": { // Attribute of form\r\n        value: true, // Default value\r\n        domAttr: \"data-useAjax\",\r\n        processor: function (node, val) { // processor to process data before return\r\n            if (typeof val === \"boolean\") {\r\n                return val;\r\n            }\r\n            val = (val !== void 0 && val !== null) ? val.toLowerCase() : '';\r\n            if (val === 'false') {\r\n                val = false;\r\n            } else if (val === 'true') {\r\n                val = true;\r\n            }\r\n            return val;\r\n        }\r\n    },\r\n    /**\r\n     * Callback after form submitting <b>Default: false</b>\r\n     * <br/>\r\n     * <b> Example </b>\r\n     * function(options){\r\n     *  //options contains all options after send\r\n     * }\r\n     */\r\n    \"ajaxCallback\": { // attribute of form\r\n        value: false, // Default value\r\n        domAttr: \"data-callback\"\r\n    },\r\n    \"beforeSubmitCallback\": {// attribute of form\r\n        value: false, // Default value\r\n        domAttr: \"data-before-submit\"\r\n    },\r\n    \"afterSubmitCallback\": {// attribute of form\r\n        value: false, // Default value\r\n        domAttr: \"data-after-submit\"\r\n    },\r\n    \"headers\": {// attribute of form\r\n        value: {\"Accept\": \"application/json\"}, // Default value\r\n        domAttr: \"data-headers\",\r\n        processor: function (node, val, self) {\r\n            if (val === void 0 || val == null) return this.value;\r\n            if (typeof val == \"string\") {\r\n                try {\r\n                    val = JSON.parse(val);\r\n                } catch (e) {\r\n                    console.error(\"Form JSON.parse error: \", e);\r\n                }\r\n            }\r\n            return Object.assign(self.value, val);\r\n        }\r\n    }\r\n};\r\n\r\nForm.prototype.mixMessagesOptions = function () {\r\n    var global = this.sf.options.instances.form;\r\n    this.options.messages = Object.assign({},\r\n        formMessages.defaults,\r\n        global && global.messages && global.messages[this.options.messagesType],\r\n        this.options.messages\r\n    );\r\n};\r\n\r\n/**\r\n * Call on form submit\r\n * @param {Event} e submit event\r\n */\r\nForm.prototype.onSubmit = function (e) {\r\n    if (this.sf.getInstance('lock', this.node)) {\r\n        // On lock we should'n do any actions\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        return;\r\n    }\r\n\r\n    this.removeMessages();\r\n\r\n    this.options.data = this.getFormData();\r\n\r\n    // We can send files only with FormData\r\n    // If form contain files and no FormData than disable ajax\r\n    if (!window.FormData && this.options.context.querySelectorAll(\"input[type='file']\").length !== 0) {\r\n        this.options.useAjax = false;\r\n    }\r\n    this.events.trigger(\"beforeSend\", this.options);\r\n    // sf.events.performAction(\"beforeSubmit\", this.options);\r\n    // this.events.performAction(\"beforeSubmit\", this.options);\r\n\r\n    if (this.options.useAjax) {\r\n        this.send(this.options);\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n};\r\n\r\n/**\r\n * Locker. Add or remove.\r\n * @param {Boolean} [remove]\r\n */\r\nForm.prototype.lock = function (remove) {\r\n    if (!this.options.lockType || this.options.lockType === 'none') {\r\n        return;\r\n    }\r\n    if (remove) {\r\n        if (!this.sf.removeInstance(\"lock\", this.node)) {\r\n            console.warn(\"You try to remove 'lock' instance, but it is not available or not started\");\r\n        }\r\n    } else {\r\n        if (!this.sf.addInstance(\"lock\", this.node, {type: this.options.lockType})) {\r\n            console.warn(\"You try to add 'lock' instance, but it is not available or already started\");\r\n        }\r\n    }\r\n};\r\n\r\n// Form messages\r\nForm.prototype.showFormMessage = formMessages.showFormMessage;\r\nForm.prototype.showFieldMessage = formMessages.showFieldMessage;\r\nForm.prototype.showFieldsMessages = formMessages.showFieldsMessages;\r\nForm.prototype.showMessages = formMessages.showMessages;\r\nForm.prototype.removeMessages = formMessages.removeMessages;\r\nForm.prototype.removeMessage = formMessages.removeMessage;\r\n\r\nForm.prototype.processAnswer = function (answer) {\r\n    this.options.messagesType && this.showMessages(answer);\r\n};\r\n\r\n/**\r\n * Send form to server\r\n * @param {Object} sendOptions\r\n */\r\nForm.prototype.send = function (sendOptions) {\r\n    var that = this;\r\n    this.lock();\r\n    if (sendOptions.beforeSubmitCallback) {\r\n        var fn = eval(sendOptions.beforeSubmitCallback);\r\n        if (typeof(fn) === \"function\") {\r\n            fn.call(sendOptions);\r\n        }\r\n    }\r\n    this.sf.ajax.send(sendOptions).then(\r\n        function (answer) {\r\n            that.events.trigger(\"success\", sendOptions);\r\n            return answer;\r\n        },\r\n        function (error) {\r\n            that.events.trigger(\"error\", sendOptions);\r\n            return error;\r\n        }).then(function (answer) {\r\n        that.lock(true);\r\n        that.processAnswer(answer);\r\n        that.events.trigger(\"always\", sendOptions);\r\n    });\r\n};\r\n\r\n/**\r\n * Serialize form\r\n * @return {Object}\r\n */\r\nForm.prototype.getFormData = function () {\r\n    if (!!window.FormData) {\r\n        return new FormData(this.options.context);\r\n    } else {\r\n        console.log(\"Form `\" + this.options.context + \"` were processed without FormData.\");\r\n        return new FormToObject(this.options.context);\r\n    }\r\n};\r\n\r\n/**\r\n * Set options (overwrite current)\r\n * @param {Object} opt options\r\n */\r\nForm.prototype.setOptions = function (opt) {\r\n    this.options = Object.assign(this.options, opt);\r\n};\r\n\r\n/**\r\n * Add all events for forms\r\n */\r\nForm.prototype.addEvents = function () {\r\n    var that = this;\r\n    this.DOMEvents.add([\r\n        {\r\n            DOMNode: this.options.context,\r\n            eventType: \"submit\",\r\n            eventFunction: function (e) {\r\n                that.onSubmit.call(that, e);\r\n            }\r\n        }\r\n    ]);\r\n};\r\n\r\n/**\r\n * Clear all variables and die\r\n */\r\nForm.prototype.die = function () {\r\n    this.DOMEvents.removeAll();\r\n    // TODO don't we need to remove it's addons and plugins?\r\n};\r\n\r\nexport default Form;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Form.js","\"use strict\";\r\n\r\nvar defaults = {\r\n    template: '<div class=\"alert form-msg ${type}\"><button class=\"btn-close\">×</button><p class=\"msg\">${text}</p></div>',\r\n    close: '.btn-close',\r\n    place: 'bottom',\r\n    levels: {\r\n        success: \"success\", info: \"info\", warning: \"warning\", error: \"error\"\r\n    },\r\n    field: '.item-form',\r\n    fieldTemplate: '<div class=\"alert form-msg ${type}\"><p class=\"msg\">${text}</p></div>',\r\n    fieldClose: '.btn-close',\r\n    fieldPlace: 'bottom',\r\n    fieldPrefix: '' // For bootstrap: class=\"has-danger\"\r\n};\r\n\r\n// Often used alias\r\ndefaults.levels.message = defaults.levels.success;\r\n\r\n// Other aliases\r\n// PSR-3 severity levels mapping (debug, info, notice, warning, error, critical, alert, emergency)\r\n// https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md\r\ndefaults.levels.debug = defaults.levels.success;\r\ndefaults.levels.info = defaults.levels.notice = defaults.levels.info;\r\ndefaults.levels.danger = defaults.levels.critical = defaults.levels.alert = defaults.levels.emergency = defaults.levels.error;\r\n\r\n/**\r\n * @param {Object|String} message\r\n * @param {String} type\r\n * @return {Object}\r\n */\r\nfunction prepareMessageObject(message, type) {\r\n    if (Object.prototype.toString.call(message) !== \"[object Object]\") {\r\n        message = {text: message, type: type};\r\n    }\r\n    message.text = message.text || message.message || message;\r\n    message.type = message.type || type;\r\n    return message;\r\n}\r\n\r\nmodule.exports = {\r\n    defaults: defaults,\r\n    showMessages: function (answer) {\r\n        if (!answer) return;\r\n\r\n        var isMsg = false;\r\n        var that = this;\r\n\r\n        for (var type in this.options.messages.levels) {\r\n            if (answer[type]) {\r\n                this.showFormMessage(answer[type], this.options.messages.levels[type]);\r\n                isMsg = true;\r\n            }\r\n        }\r\n\r\n        if (answer.messages) {\r\n            this.showFieldsMessages(answer.messages, \"success\");\r\n            isMsg = true;\r\n        }\r\n        if (answer.errors) {\r\n            this.showFieldsMessages(answer.errors, \"error\");\r\n            isMsg = true;\r\n        }\r\n        if (answer.warnings) {\r\n            this.showFieldsMessages(answer.warnings, \"warning\");\r\n            isMsg = true;\r\n        }\r\n\r\n        if (!isMsg && answer.status > 300) {\r\n            var error = answer.status ? answer.status + \" \" : \"\";\r\n            error += answer.statusText ? answer.statusText : \"\";\r\n            error += answer.data && !answer.statusText ? answer.data : \"\";\r\n            error += error.length === 0 ? answer : \"\";\r\n            this.showFormMessage(error, \"error\");\r\n        }\r\n\r\n        this._messages.forEach(function (m) {\r\n            if (m.close) {\r\n                m.closeHandler = that.removeMessage.bind(that, m);\r\n                m.close.addEventListener(\"click\", m.closeHandler);\r\n            }\r\n        });\r\n    },\r\n    removeMessage: function (m, e) {\r\n        m.close && m.close.removeEventListener(\"click\", m.closeHandler);\r\n        m.el.parentNode.removeChild(m.el);\r\n        m.field && m.field.classList.remove(this.options.messages.fieldPrefix + m.type);\r\n        if (e) {\r\n            e.preventDefault && e.preventDefault();\r\n            this._messages.splice(this._messages.indexOf(m), 1);\r\n        }\r\n    },\r\n    removeMessages: function () {\r\n        var that = this;\r\n        if (this._messages) {\r\n            this._messages.forEach(function (m) {\r\n                that.removeMessage(m, false);\r\n            });\r\n        }\r\n        that._messages = [];\r\n    },\r\n    showFormMessage: function (message, type) {\r\n        var msgEl;\r\n        var parent;\r\n        var tpl = this.options.messages.template;\r\n        var parser = new DOMParser();\r\n\r\n        message = prepareMessageObject(message, type);\r\n\r\n        for (var item in message) {\r\n            if (!message.hasOwnProperty(item)) return;\r\n            tpl = tpl.replace('${' + item + '}', message[item]);\r\n        }\r\n\r\n        msgEl = parser.parseFromString(tpl, \"text/html\").firstChild.lastChild.firstChild;\r\n\r\n        if (this.options.messages.place === \"bottom\") {\r\n            this.node.appendChild(msgEl);\r\n        } else if (this.options.messages.place === \"top\") {\r\n            this.node.insertBefore(msgEl, this.node.firstChild);\r\n        } else {\r\n            parent = document.querySelector(this.options.messages.place);\r\n            parent.appendChild(msgEl);\r\n        }\r\n        this._messages.push({el: msgEl, close: msgEl.querySelector(this.options.messages.close)});\r\n    },\r\n    /**\r\n     * @param {HTMLElement} el\r\n     * @param {String} message\r\n     * @param {String} type\r\n     * @param {Boolean} [isContainer]\r\n     */\r\n    showFieldMessage: function (el, message, type, isContainer) {\r\n        var field = isContainer ? el : sf.helpers.domTools.closest(el, this.options.messages.field);\r\n        var msgEl;\r\n        var tpl = this.options.messages.fieldTemplate;\r\n\r\n        if (!field) return;\r\n\r\n        var parser = new DOMParser();\r\n        message = prepareMessageObject(message, type);\r\n\r\n        field.classList.add(this.options.messages.fieldPrefix + type);\r\n\r\n        for (var item in message) {\r\n            if (!message.hasOwnProperty(item)) return;\r\n            tpl = tpl.replace('${' + item + '}', message[item]);\r\n        }\r\n\r\n        msgEl = parser.parseFromString(tpl, \"text/html\").firstChild.lastChild.firstChild;\r\n\r\n        if (this.options.messages.fieldPlace === \"bottom\") {\r\n            field.appendChild(msgEl);\r\n        } else if (this.options.messages.fieldPlace === \"top\") {\r\n            field.insertBefore(msgEl, field.firstChild);\r\n        } else {\r\n            field = field.querySelector(this.options.messages.fieldPlace);\r\n            field.appendChild(msgEl);\r\n        }\r\n\r\n        this._messages.push({\r\n            el: msgEl,\r\n            close: msgEl.querySelector(this.options.messages.fieldClose),\r\n            field: field,\r\n            type: type\r\n        });\r\n    },\r\n    showFieldsMessages: function (messages, type) {\r\n        var that = this;\r\n        var notFound = sf.iterateInputs(this.node, messages, function (el, message) {\r\n            that.showFieldMessage(el, message, type);\r\n        });\r\n\r\n        notFound.forEach(function (msgObj) {\r\n            Object.keys(msgObj).forEach(function (name) {\r\n                var container = that.node.querySelector('[data-message-placeholder=\"' + name + '\"]');\r\n                if (container) {\r\n                    // TODO check container.dataset.messageVariant? variants are \"field\" and \"form\"\r\n                    that.showFieldMessage(container, msgObj[name], type, true);\r\n                }\r\n            });\r\n        });\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/formMessages.js","/* github.com/serbanghita/FormToObject.js 1.0.1  (c) 2013 Serban Ghita <serbanghita@gmail.com> @licence MIT */\r\n// Constructor.\r\n\r\nvar FormToObject = function (formRef) {\r\n    if (!formRef) {\r\n        return false;\r\n    }\r\n\r\n    this.formRef = formRef;\r\n    this.keyRegex = /[^\\[\\]]+/g;\r\n    this.$form = null;\r\n    this.$formElements = [];\r\n    this.formObj = {};\r\n\r\n    if (!this.setForm()) {\r\n        return false;\r\n    }\r\n    if (!this.setFormElements()) {\r\n        return false;\r\n    }\r\n\r\n    return this.setFormObj();\r\n};\r\n\r\n// Set the main form object we are working on.\r\nFormToObject.prototype.setForm = function () {\r\n    switch (typeof this.formRef) {\r\n\r\n        case 'string':\r\n            this.$form = document.getElementById(this.formRef);\r\n            break;\r\n\r\n        case 'object':\r\n            if (this.isDomNode(this.formRef)) {\r\n                this.$form = this.formRef;\r\n            }\r\n            break;\r\n\r\n    }\r\n\r\n    return this.$form;\r\n};\r\n\r\n// Set the elements we need to parse.\r\nFormToObject.prototype.setFormElements = function () {\r\n    this.$formElements = this.$form.querySelectorAll('input, textarea, select');\r\n    return this.$formElements.length;\r\n};\r\n\r\n// Check to see if the object is a HTML node.\r\nFormToObject.prototype.isDomNode = function (node) {\r\n    return typeof node === \"object\" && \"nodeType\" in node && node.nodeType === 1;\r\n};\r\n\r\n// Iteration through arrays and objects. Compatible with IE.\r\nFormToObject.prototype.forEach = function (arr, callback) {\r\n    if ([].forEach) {\r\n        return [].forEach.call(arr, callback);\r\n    }\r\n\r\n    var i;\r\n    for (i in arr) {\r\n        // Object.prototype.hasOwnProperty instead of arr.hasOwnProperty for IE8 compatibility.\r\n        if (Object.prototype.hasOwnProperty.call(arr, i)) {\r\n            callback.call(arr, arr[i]);\r\n        }\r\n    }\r\n};\r\n\r\n// Recursive method that adds keys and values of the corresponding fields.\r\nFormToObject.prototype.addChild = function (result, domNode, keys, value) {\r\n    // #1 - Single dimensional array.\r\n    if (keys.length === 1) {\r\n        // We're only interested in the radio that is checked.\r\n        if (domNode.nodeName === 'INPUT' && domNode.type === 'radio') {\r\n            if (domNode.checked) {\r\n                return result[keys] = value;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Checkboxes are a special case. We have to grab each checked values\r\n        // and put them into an array.\r\n        if (domNode.nodeName === 'INPUT' && domNode.type === 'checkbox') {\r\n            if (domNode.checked) {\r\n                if (!result[keys]) {\r\n                    result[keys] = [];\r\n                }\r\n                return result[keys].push(value);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Multiple select is a special case.\r\n        // We have to grab each selected option and put them into an array.\r\n        if (domNode.nodeName === 'SELECT' && domNode.type === 'select-multiple') {\r\n            result[keys] = [];\r\n            var DOMchilds = domNode.querySelectorAll('option[selected]');\r\n            if (DOMchilds) {\r\n                this.forEach(DOMchilds, function (child) {\r\n                    result[keys].push(child.value);\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Fallback. The default one to one assign.\r\n        result[keys] = value;\r\n    }\r\n\r\n    // #2 - Multi dimensional array.\r\n    if (keys.length > 1) {\r\n        if (!result[keys[0]]) {\r\n            result[keys[0]] = {};\r\n        }\r\n\r\n        return this.addChild(result[keys[0]], domNode, keys.splice(1, keys.length), value);\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nFormToObject.prototype.setFormObj = function () {\r\n    var test;\r\n    var i = 0;\r\n\r\n    for (i = 0; i < this.$formElements.length; i++) {\r\n        // Ignore the element if the 'name' attribute is empty.\r\n        // Ignore the 'disabled' elements.\r\n        if (this.$formElements[i].name && !this.$formElements[i].disabled) {\r\n            test = this.$formElements[i].name.match(this.keyRegex);\r\n            this.addChild(this.formObj, this.$formElements[i], test, this.$formElements[i].value);\r\n        }\r\n    }\r\n\r\n    return this.formObj;\r\n};\r\n\r\nmodule.exports = FormToObject;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/formToObject.js","\"use strict\";\r\n// Plugin in formMessages to iterate form inputs\r\n\r\n// TODO comment all of this\r\n// TODO ask @Systerr the reason of variable 'prefix'\r\nvar notFound = [];\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} context\r\n * @param {Object} names\r\n * @param {Function} callback\r\n * @param {String} [prefix]\r\n */\r\nfunction findNodes(context, names, callback, prefix) {\r\n    for (var name in names) {\r\n        if (!names.hasOwnProperty(name)) {\r\n            continue;\r\n        }\r\n\r\n        var partOfSelector = (prefix) ? prefix + \"[\" + name + \"]\" : name;\r\n        var type = Object.prototype.toString.call(names[name]);\r\n        var selector = \"[name='\" + partOfSelector + \"']\";\r\n\r\n        switch (type) {\r\n            case '[object Object]':\r\n                findNodes(context, names[name], callback, partOfSelector);\r\n                break;\r\n            case '[object Array]':\r\n                names[name].forEach(function (el) {\r\n                    \"use strict\";\r\n                    // TODO refactor this should call recursive\r\n                    var sel = \"[name='\" + partOfSelector + \"[]']\" + \"[value='\" + el + \"']\";\r\n                    var nodes = context.querySelectorAll(sel);\r\n                    if (nodes.length === 0) {\r\n                        notFound.push(sel);\r\n                    }\r\n                    for (var i = 0, max = nodes.length; i < max; i++) {\r\n                        callback(nodes[i], true);\r\n                    }\r\n                });\r\n                break;\r\n            case '[object String]':\r\n            case '[object Number]':\r\n                var nodes = context.querySelectorAll(selector);\r\n                if (nodes.length === 0) {\r\n                    var obj = {};\r\n                    obj[partOfSelector] = names[name];\r\n                    notFound.push(obj);\r\n                }\r\n                for (var i = 0, max = nodes.length; i < max; i++) {\r\n                    callback(nodes[i], names[name]);\r\n                }\r\n                break;\r\n\r\n            default :\r\n                console.error(\"unknown type -\", type, \" and message\", names[name]);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} context\r\n * @param {Object} names\r\n * @param {Function} callback\r\n * @param {String} [prefix]\r\n * @return {String[]}\r\n */\r\nvar iterateInputs = function (context, names, callback, prefix) {\r\n    notFound = [];\r\n    findNodes(context, names, callback, prefix);\r\n    if (notFound.length !== 0) {\r\n        console.log(\"Some element not found in form\", notFound);\r\n    }\r\n    return notFound;\r\n};\r\n\r\nmodule.exports = iterateInputs;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/iterateInputs.js"],"sourceRoot":""}